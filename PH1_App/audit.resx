<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="textBox1.Text" xml:space="preserve">
    <value>Audit là một tính năng của hệ quản trị cơ sở dữ liệu dùng để ghi lại hoạt động của người dùng một cách chi tiết. Vận dụng tính năng này, phần mềm có cài đặt audit cho những nhóm người dùng sau.

Các DBA của hệ thống này sẽ được audit trên tất cả các quyền và câu lệnh mà họ sử dụng. Vì DBA là người đứng đầu của database, cho nên mọi hoạt động phải được giám sát. Nếu có xảy ra lỗi thì các người dùng khác có thể retrace những hoạt động và đối tượng mà DBA đã thực hiện lên để có thể đưa ra giải pháp và phương án giải quyết cho hệ thống của mình làm việc một cách an toàn và hiệu quả.

Các nhân viên với cấp bậc là Giám đốc sở, Giám đốc cơ sở y tế cũng nên được cài audit cho những hoạt động mà họ thực thi, điển hình là các stored procedure hoặc function được cài đặt bởi người dùng. Điển hình là các hoạt động như thêm hay xóa nhân viên, phát thông báo, phân quyền, tước quyền, cũng phải được audit.

Đối với các nhân viên bình thường nói riêng, hay mọi loại nhân viên nói chung thì một hoạt động nên được audit đó chính là đăng nhập. Việc ghi lại hoạt động đăng nhập của nhân viên có thể giúp ích cho các cơ sở y tế có chế độ điểm danh hằng ngày hoặc các trường hợp như đăng nhập thất bại do sai mật khẩu hoặc mất dữ liệu.

Để kiểm tra lại các phiên đăng nhập thất bại, ta sử dụng câu truy vấn sau:
Việc các nhân viên hay bệnh nhân có quyền được chỉnh sửa thông tin cá nhân cũng nên được ghi lại. Có thể sẽ ít người nhớ mã người dùng của mình, nên giả sử có trường hợp một nhân viên hay bệnh nhân thay đổi thông tin quan trọng (ví dụ như họ tên, số điện thoại…) của mình, thì việc audit có thể giúp những người quản lý hệ thống có thể retrace và liên hệ lại với họ.</value>
  </data>
  <data name="textBox2.Text" xml:space="preserve">
    <value>Dưới đây là danh sách các từ khóa audit diễn tả các hoạt động cụ thể của người dùng:

     ⦁  ALTER SESSION: Thay đổi một session, thông thường đi kèm với LOGON
     ⦁  DROP: Xóa một đối tượng nào đó (bảng, user, function...)
     ⦁  GRANT: Cấp quyền cho ai đó
     ⦁  LOGON: Đăng nhập vào hệ thống
     ⦁  REVOKE: Thu hồi quyền từ ai đó
     ⦁  SELECT: Xem một bảng dữ liệu nào đó
     ⦁  UPDATE: Cập nhật một dòng hay bảng nào đó</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        iwAAAIsBRmWzPwAAAUxJREFUSEvdlVGVwjAQRVcCEpCAgyIBCUhAwkpAAhKQgAQkIAEH3Xd7Mj3T8NIC
        /duP29Mk93WapISfvu9f6LruIK7iKfoEbfoPLueYNBTciZvID22Bt8t5x3iDLPIbP8RJ7BO06Q8Hf7bI
        cEEqcoROtZhhvPKbRYaLhPs7cgav+ORuzgHEY5Hg7c0D+cxkNovEV4Fwd8ISysWeXN04Qkxzdt1bkCv5
        pxtHYBD2TliCXDyjHoP/USD24NcJSyh3LvmHG0e4zAlLkCv5ixufTFF8NAv8lLVLHGL8FuBYSw68lLG/
        ARguEjYiH2Ks66aWkxvrHjQ/kPFGEmdLnEnA5rM/caKyHLTjo8jQZ8+wSUOSe7sWeBSOgrbIpBFI3Are
        nD+VeABLSJv+bXLro35SZLxZw1yRF/lbWkWs/C2uiBXXUBW5WWktpYg+iO78BwC7gx10RGeXAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>